{
    "locks": {
        "ajardin/docker-symfony": {
            "version": "0.2",
            "recipe": {
                "repo": "0.2",
                "branch": "master",
                "version": "0.2",
                "ref": "696b4e17945ac6db614b6d09f073ef74c1567cfd"
            }
        }
    },
    "manifests": {
        "ajardin/docker-symfony": {
            "repository": "github.com/symfony/recipes-contrib",
            "package": "ajardin/docker-symfony",
            "version": "0.2",
            "manifest": {
                "composer-scripts": {
                    "bin/docker-upgrade": "php-script"
                },
                "copy-from-recipe": {
                    "bin/": "%BIN_DIR%/"
                },
                "gitignore": [
                    "/%BIN_DIR%/docker-upgrade",
                    "/docker/"
                ],
                "post-install-output": [
                    "  * Edit the <fg=green>docker/.env</> file to configure your own settings.",
                    "",
                    "  * Edit the <fg=green>docker/nginx/conf.d/custom.conf</> file to configure your own virtual host.",
                    "",
                    "  * To manage the Docker environment from the project directory:",
                    "    - If you already have a Makefile in your project, copy the content of the <fg=green>docker/Makefile.sample</> file at the top of it.",
                    "    - If you do not already have a Makefile, the <fg=green>docker/Makefile.sample</> file will be installed in your project.",
                    "",
                    "  * Run <fg=green>make</> to display the list of available commands.",
                    "",
                    "Documentation: https://github.com/ajardin/docker-symfony/wiki"
                ]
            },
            "files": {
                "bin/docker-upgrade": {
                    "contents": "#!/usr/bin/env php\n<?php\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\nuse Symfony\\Component\\Filesystem\\Filesystem;\n\nconst SOURCE_DIRECTORY = 'vendor/ajardin/docker-symfony';\nconst TARGET_DIRECTORY = 'docker';\n\n$filesystem = new Filesystem();\n\n/**\n * Create the Docker directory at the project root\n */\nif ($filesystem->exists(TARGET_DIRECTORY) === false) {\n    $filesystem->mkdir(TARGET_DIRECTORY);\n}\n\n/**\n * Mirror the vendor directory with the directory created at the project root\n */\nif ($filesystem->exists(SOURCE_DIRECTORY) === true) {\n    $filesystem->mirror(SOURCE_DIRECTORY, TARGET_DIRECTORY, null, ['override' => true]);\n}\n\n/**\n * Define the default environment variables\n */\nif ($filesystem->exists(TARGET_DIRECTORY . '/.env') === false) {\n    $filesystem->copy(\n        TARGET_DIRECTORY . '/.env.dist',\n        TARGET_DIRECTORY . '/.env'\n    );\n}\n\n/**\n * Define the default Nginx configuration\n */\nif ($filesystem->exists(TARGET_DIRECTORY . '/nginx/conf.d/custom.conf') === false) {\n    $filesystem->copy(\n        TARGET_DIRECTORY . '/nginx/conf.d/symfony.conf.dist',\n        TARGET_DIRECTORY . '/nginx/conf.d/custom.conf'\n    );\n}\n\n/**\n * Copy the default Makefile at the project root\n */\nif ($filesystem->exists('Makefile') === false) {\n    $filesystem->copy(\n        TARGET_DIRECTORY . '/Makefile.sample',\n        'Makefile'\n    );\n}\n",
                    "executable": true,
                    "encoding": ""
                }
            },
            "origin": "ajardin/docker-symfony:0.2@github.com/symfony/recipes-contrib:master",
            "is_contrib": true
        }
    }
}